apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name | default .Release.Name }}
  labels:
    {{- include "pod-with-service-ingress.labels" . | nindent 4 }}
  {{- with .Values.deployment.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}

spec:
  {{ if .Values.deployment.strategy }}
  strategy:
  {{- with .Values.deployment.strategy }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pod-with-service-ingress.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "pod-with-service-ingress.selectorLabels" . | nindent 8 }}
        {{- with .Values.deployment.labels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name | default .Release.Name }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Release.Name }}-initial-scan
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
          env:
          {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}
            - secretRef:
                name: {{ .Release.Name }}
            {{- with .Values.extraEnvFrom }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          command:
            - python
            - scan.py
          volumeMounts:
            - name: driftignore
              mountPath: /usr/src/.driftignore
              readOnly: true
      containers:
        - name: {{ .Release.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
          env:
          {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}
            - secretRef:
                name: {{ .Release.Name }}
            {{- with .Values.extraEnvFrom }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.applicationPort }}
              protocol: TCP
          volumeMounts:
            - name: driftignore
              mountPath: /usr/src/.driftignore
              subPath: .driftignore
              readOnly: true
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: driftignore
          configMap:
            name: {{ .Release.Name }}-driftignore
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
